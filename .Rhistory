myCorpus <- tm_map(myCorpus, stemDocument)
myCorpus <- tm_map(myCorpus, stemCompletion, dictionary=dictCorpus)
myCorpus <- tm_map(myCorpus, PlainTextDocument)
myDtm <- TermDocumentMatrix(myCorpus, control = list(minWordLength = 1))
findFreqTerms(myDtm, lowfreq=10)
q()
setwd('~/Kaggle/Coupon Prediction')
library(data.table)
DT1c.1 <- fread("DT1c.1.csv", header=T)
head(DT1c.1)
DT1c <- fread("DT1c.csv", header=T)
head(DT1c)
DT1c$pred <- DT1c.1$preds
DT1c <- DT1c[order(DT1c, USER_ID_hash), ]
DT1c <- DT1c[order(DT1c$USER_ID_hash), ]
head(DT1c)
DT1c <- DT1c[order(DT1c$USER_ID_hash, DT1c$pred), ]
DT1c <- DT1c[order(DT1c$USER_ID_hash, -DT1c$pred), ]
head(DT1c)
?unique
user_coup <- unique(DT1c[, USER_ID_hash])
head(user_coup)
user_coup <- DT1c[duplicated(DT1c$USER_ID_hash),]
head(user_coup)
user_coup <- DT1c[!duplicated(DT1c$USER_ID_hash),]
head(user_coup)
str(DT1c)
head(DT1c[], c(4:15, 157)])
head(DT1c[, c(4:15, 157)])
head(DT1c[, (4:15, 157)])
head(DT1c[, c(4:15, 157)])
head(DT1c[, c(4:15, 157)], 20)
head(DT1c[, c(4, 157)], 20)
source('~/Kaggle/Coupon Prediction/couponpred3.R', echo=TRUE)
head(DT1c[, (4, 157)], 20)
head(DT1c[, (4:15, 157)], 20)
x <- DT1c[, (4:15, 157)]
x <- DT1c[, c(4:15, 157)]
head(DT1c[, .c(4:15,157)]
)
head(DT1c[, .(4:15,157)])
head(DT1c[, .(USER_ID_hash, pred)])
head(DT1c[, .(USER_ID_hash, V1, V1, pred)])
head(DT1c[, .(USER_ID_hash, V1, V1, pred)], 40)
head(DT1c[, .(USER_ID_hash, V1, V1, pred)], 100)
head(user_coup)
head(user_coup[, 4:15]
)
quantile(user_coup$pred, probs = seq(0, 1, 0.1))
coupon_list <- read.csv("coupon_list_test.csv",  header=T)
coupon_area <- read.csv("coupon_area_test.csv",  header=T)
coupon_list_trans <- read.csv("coupon_list_trans.csv", header = T)
c1 <- unique(coupon_list_trans[, c(2, 27)])
c2 <- merge(coupon_list, c1, by=c("CAPSULE_TEXT"), all.x=T)
c22 <- c2[c("COUPON_ID_hash", "large_area_name","ken_name","small_area_name",
"VALIDFROM","VALIDEND","capsule.translation", "PRICE_RATE")]
library(caret)
large_area <- predict(dummyVars(~large_area_name, data=c22), newdata=c22)
ken_name <- predict(dummyVars(~ken_name, data=c22), newdata=c22)
small_area_name <- predict(dummyVars(~small_area_name, data=c22), newdata=c22)
capsule <- predict(dummyVars(~capsule.translation, data=c22), newdata=c22)
c221 <- as.data.table(cbind(c22, capsule, large_area, ken_name, small_area_name))
c221 <- c221[, c("large_area_name","ken_name","small_area_name"):=NULL]
n <- substr(names(c221),1, 5)
names(c221)[which(n=='large')] <- c("C1", "C2","C3","C4","C5","C6","C7","C8","C9")
ken <- NULL
for (i in 1:length(which(n=='ken_n'))) {
ken[i]=paste("K",i, sep="")
}
names(c221)[which(n=='ken_n')] <- ken
sma <- NULL
for (i in 1:length(which(n=='small'))) {
sma[i]=paste("S",i, sep="")
}
names(c221)[which(n=='small')] <- sma
head(c221)
c221$avg_price_rate = c221$PRICE_RATE
c221$PRICE_RATE <- NULL
head(c221)
head(user_coup[, .(USER_ID_hash, pred)])
nrow(user_coup)
coup <- read.csv("coupon_list_trans.csv", header=T)
coup <- coup[c("COUPON_ID_hash", "large_area_name","ken_name","small_area_name",
"VALIDFROM","VALIDEND","capsule.translation")]
large_area <- predict(dummyVars(~large_area_name, data=coup), newdata=coup)
ken_name <- predict(dummyVars(~ken_name, data=coup), newdata=coup)
small_area_name <- predict(dummyVars(~small_area_name, data=coup), newdata=coup)
capsule <- predict(dummyVars(~capsule.translation, data=coup), newdata=coup)
coup.1 <- as.data.table(cbind(coup, capsule, large_area, ken_name, small_area_name))
coup.1 <- coup.1[, c("large_area_name","ken_name","small_area_name"):=NULL]
n <- substr(names(coup.1),1, 5)
names(coup.1)[which(n=='large')] <- c("C1", "C2","C3","C4","C5","C6","C7","C8","C9")
ken <- NULL
for (i in 1:length(which(n=='ken_n'))) {
ken[i]=paste("K",i, sep="")
}
names(coup.1)[which(n=='ken_n')] <- ken
sma <- NULL
for (i in 1:length(which(n=='small'))) {
sma[i]=paste("S",i, sep="")
}
names(coup.1)[which(n=='small')] <- sma
head(coup.1)
str(coup.1)
str(c221)
unique_coup <- user_coup[!duplicated(user_coup$COUPON_ID_hash),]
str(unique_coup)
unique_coup <- unique_coup[, COUPON_ID_hash]
View(coup.1)
setkey(coup.1, COUPON_ID_hash)
mas_coup = coup.1[unique_coup]
head(mas_coup)
View(c221)
View(mas_coup)
n <- substr(names(c221),1, 5)
length(n2mfrow())
length(n)
str(c221)
str(c22)
str(coup)
head(coup)
head(c22)
coup <- read.csv("coupon_list_trans.csv", header=T)
coup <- coup[c("COUPON_ID_hash", "large_area_name","ken_name","small_area_name","PRICE_RATE",
"VALIDFROM","VALIDEND","capsule.translation")]
head(coup)
large_area <- predict(dummyVars(~large_area_name, data=coup), newdata=coup)
ken_name <- predict(dummyVars(~ken_name, data=coup), newdata=coup)
small_area_name <- predict(dummyVars(~small_area_name, data=coup), newdata=coup)
capsule <- predict(dummyVars(~capsule.translation, data=coup), newdata=coup)
coup.1 <- as.data.table(cbind(coup, capsule, large_area, ken_name, small_area_name))
coup.1 <- coup.1[, c("large_area_name","ken_name","small_area_name"):=NULL]
n <- substr(names(coup.1),1, 5)
names(coup.1)[which(n=='large')] <- c("C1", "C2","C3","C4","C5","C6","C7","C8","C9")
ken <- NULL
for (i in 1:length(which(n=='ken_n'))) {
ken[i]=paste("K",i, sep="")
}
names(coup.1)[which(n=='ken_n')] <- ken
sma <- NULL
for (i in 1:length(which(n=='small'))) {
sma[i]=paste("S",i, sep="")
}
names(coup.1)[which(n=='small')] <- sma
head(coup.1)
n1 <- names(coup.1)
n1
n2 <- names(mas_coup)
n2
sc1 <- coup.1(which(n1 %in% n2))
?which
sc1 <- coup.1[, which(n1 %in% n2)]
sc1
?choose
sc1 <- coup.1[, n2]
sc1 <- coup.1[, c(n2)]
sc1 <- coup.1[, .(n2)]
View(sc1)
class(n2)
str(n2)
n2 <- as.list(names(mas_coup))
n2
sc1 <- coup.1[, n2]
n2 <- names(mas_coup)
sc1 <- coup.1[, n2]
sc1 <- coup.1[, which(n1 %in% n2)]
for (i in 1:length(n2)) {
n2[i] <- paste(n2[i], sep=",")
}
n2
sc1 <- coup.1[, n2]
n2 <- as.list(names(mas_coup))
sc1 <- coup.1[, .(n2)]
sc1 <- coup.1[, coup.1[n2]]
x <- which(n2 %in% n1)
x <- which(n1 %in% n2)
n1 <- names(c221)
n2 <- names(mas_coup)
x <- which(n2 %in% n1)
sc1 <- coup.1[, x]
x
sc1 <- coup.1[, which(n2 %in% n1)]
x <- which(n2 %in% n1)
x
sc1 <- mas_coup[, x]
x <- paste(which(n2 %in% n1), sep=",")
x
?paste
x <- paste(which(n2 %in% n1), collapse=",")
x
x <- paste(which(n2 %in% n1), sep=",",collapse=",")
x
x <- paste(which(n2 %in% n1), collapse=", ")
x
x <- paste(which(n2 %in% n1), sep=",")
x
x <- which(n2 %in% n1)
sc1 <- mas_coup[, mas_coup[, x]]
sc1 <- mas_coup[, x]
x
mas_coup2 <- mas_coup[, c(1:71, 85:126)]
mas_coup2 <- mas_coup[c(1:71, 85:126)]
mas_coup2 <- mas_coup[n2]
mas_coup2 <- mas_coup[, c(1:20)]
mas_coup2 <- mas_coup[, 1:20]
mas_coup2 <- mas_coup[, 1:20]
mas_coup2 <- mas_coup[, c(1:71,85:126)]
mas_coup2 <- mas_coup[, .c(1:71,85:126)]
class(mas_coup)
mas_coup2 <- as.data.frame(mas_coup[, c(1:71,85:126)])
mas_coup2 <- as.data.frame(mas_coup)[, c(1:71,85:126)]
n1
n2
c221 <- as.data.table(cbind(c22, capsule, large_area, ken_name, small_area_name))
c221 <- c221[, c("large_area_name","ken_name","small_area_name"):=NULL]
#replace large_area names
n <- substr(names(c221),1, 5)
names(c221)[which(n=='large')] <- c("C1", "C2","C3","C4","C5","C6","C7","C8","C9")
ken <- NULL
for (i in 1:length(which(n=='ken_n'))) {
ken[i]=paste("K",i, sep="")
}
names(c221)[which(n=='ken_n')] <- ken
sma <- NULL
for (i in 1:length(which(n=='small'))) {
sma[i]=paste("S",i, sep="")
}
names(c221)[which(n=='small')] <- sma
n1 <- names(c221)
n1
c221 <- as.data.table(cbind(c22, capsule, large_area, ken_name, small_area_name))
c221 <- as.data.table(cbind(c22, capsule, large_area, ken_name, small_area_name))
c221 <- as.data.table(cbind(c22, capsule, large_area, ken_name, small_area_name))
c221 <- c221[, c("large_area_name","ken_name","small_area_name"):=NULL]
View(c221)
c221$avg_price_rate <- c221$PRICE_RATE
c221$avg_price_rate <- NULL
n1 <- names(c221)
N1
n1
c22 <- c2[c("COUPON_ID_hash", "large_area_name","ken_name","small_area_name",
"VALIDFROM","VALIDEND","capsule.translation", "PRICE_RATE")]
c221 <- as.data.table(cbind(c22, capsule, large_area, ken_name, small_area_name))
large_area <- predict(dummyVars(~large_area_name, data=c22), newdata=c22)
ken_name <- predict(dummyVars(~ken_name, data=c22), newdata=c22)
small_area_name <- predict(dummyVars(~small_area_name, data=c22), newdata=c22)
capsule <- predict(dummyVars(~capsule.translation, data=c22), newdata=c22)
c221 <- as.data.table(cbind(c22, capsule, large_area, ken_name, small_area_name))
c221 <- c221[, c("large_area_name","ken_name","small_area_name"):=NULL]
n <- substr(names(c221),1, 5)
names(c221)[which(n=='large')] <- c("C1", "C2","C3","C4","C5","C6","C7","C8","C9")
ken <- NULL
for (i in 1:length(which(n=='ken_n'))) {
ken[i]=paste("K",i, sep="")
}
names(c221)[which(n=='ken_n')] <- ken
sma <- NULL
for (i in 1:length(which(n=='small'))) {
sma[i]=paste("S",i, sep="")
}
names(c221)[which(n=='small')] <- sma
n1 <- names(c221)
n1
n2
names(coup.1)
mas_coup = coup.1[unique_coup]
setkey(coup.1, COUPON_ID_hash)
mas_coup = coup.1[unique_coup]
names(mas_coup)
n1 <- names(c221)
n2 <- names(mas_coup)
x <- which(n2 %in% n1)
x
mas_coup2 <- as.data.frame(mas_coup)[, c(1:72,86:127)]
write.csv(mas_coup2, file='mas_coup2.csv')
write.csv(c221, file='c221.csv')
head(mas_coup2)
mas_coup2 <- as.data.frame(mas_coup)[, c(5:72,86:127)]
write.csv(mas_coup2, file='mas_coup2.csv')
head(c221)
mas_coup2 <- as.data.frame(mas_coup)[, c(2,6:72,86:127)]
write.csv(mas_coup2, file='mas_coup2.csv')
c222 <- as.data.frame(c221)[, c(5:72,86:127)]
c222 <- as.data.frame(c221)[,  c(5:72,86:127)]
str(c221)
c222 <- as.data.frame(c221)[,  c(5:114)]
write.csv(mas_coup2, file='mas_coup2.csv')
write.csv(c222, file='c221.csv')
write.csv(c222, file='c222.csv')
head(c222)
c222.s <- scale(c222)
mc.s <- scale(mas_coup2)
head(mc.s)
head(c222.s)
d1 <- dist(mc.s, method = "minkowski")
head(d1)
f1 <- hclust(d1, method="ward")
plot(f1)
g1 <- cutree(f1, k=20)
table(g1)
mas_coup2$cluster = g1
install.packages("class")
library(class)
?kmeans
k1 <- kmeans(d1, centers = 20, iter.max = 100, nstart = 25)
wss <- (nrow(d1)-1)*sum(apply(d1,2,var))
dim(d1)
class(d1)
wss <- (nrow(mc.s)-1)*sum(apply(mc.s,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mc.s,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
for (i in 2:20) wss[i] <- sum(kmeans(mc.s,
centers=i)$withinss)
plot(1:20, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
for (i in 2:30) wss[i] <- sum(kmeans(mc.s,
centers=i)$withinss)
plot(1:30, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
for (i in 2:100) wss[i] <- sum(kmeans(mc.s,
centers=i)$withinss)
plot(1:100, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
dim(mc.s)
table(g1)
plot(f1)
F1
f1
h1 <- f1$height
h1[1:10]
subs <- round(h1 - c(0,h1[-length(h1)]), 3) # subtract next height
which.max(subs)
library(ggplot2)
autoplot(prcomp(mc.s), colour = "g1")
prcomp(mc.s)
autoplot(prcomp(mc.s), colour = "g1")
ggplot(prcomp(mc.s), colour = "g1")
pc <- princomp(mc.s, cor=T, scores=T)
head(mc.s)
pc <- princomp(mas_coup2, cor=T, scores=T)
plot(g1)
library(mclust)
install.packages("mclust")
install.packages("mclust")
library(mclust)
f12 <- Mclust(mc.s)
plot(f12)
summary(f12)
f12 <- Mclust(mc.s)
plot(f12)
plot(f12)
plot(f12)
plot(f12)
summary(f12)
plot(f1)
g1 <- cutree(f1, k=20)
table(g1)
mas_coup2$cluster = g1
prop.table(table(mc.s$cluster))
prop.table(table(mas_coup2$cluster))
head(mas_coup2)
mc.s$cluster = mas_coup2$cluster
mc.s$cluster <- mas_coup2$cluster
mc.s <- scale(mas_coup2)
mc.s$cluster <- mas_coup2$cluster
mc.s$cluster <- as.matrix(mas_coup2$cluster)
dim(mc.s)
dim(c222.s)
?sqrt
sqrt(8263)
head(mas_coup2)
str(mas_coup2)
mc.s <- as.data.frame(scale(mas_coup2))
labels <- mc.s[, 111]
head(labels)
head(mc.s)
mc.s <- as.data.frame(scale(mas_coup2[, 1:110]))
head(mc.s)
labels <- as.factor(mas_coup2$cluster)
head(c222.s)
p <- knn(mc.s, c222.s, k = 5, class = labels)
?knn
p <- knn(mc.s, c222.s, k = 5, cl = labels)
head(c222)
c222.s <- scale(c222)
head(cc222.s)
head(c222.s)
?scale
normalize <- function(x) {
return ((x-min(x))/(max(x)-min(x)))
}
mc.s$PRICE_RATE <- normalize(mas_coup2$PRICE_RATE)
head(mc.s)
mc.s = mas_coup2
head(mc.s)
mc.s$PRICE_RATE <- normalize(mas_coup2$PRICE_RATE)
head(mc.s)
c222.s = c222
c222.s$PRICE_RATE <- normalize(c222$PRICE_RATE)
head(c222.s)
d1 <- dist(mc.s, method = "minkowski")
head(mc.s)
mc.s <- mas_coup2
head(mc.s)
mas_coup2 <- as.data.frame(mas_coup)[, c(2,6:72,86:127)]
mc.s <- mas_coup2
mc.s$PRICE_RATE <- normalize(mas_coup2$PRICE_RATE)
head(mc.s)
head(c222.s)
d1 <- dist(mc.s, method = "minkowski")
f1 <- hclust(d1, method="ward")
plot(f1)
h1 <- f1$height
subs <- round(h1 - c(0,h1[-length(h1)]), 3) # subtract next height
which.max(subs)
g1 <- cutree(f1, k=20)
table(g1)
g1 <- cutree(f1, k=25)
table(g1)
g1 <- cutree(f1, k=50)
table(g1)
mas_coup2$cluster = g1
labels <- as.factor(mas_coup2$cluster)
head(mc.s)
head(c222.s)
head(labels, 20)
p <- knn(mc.s, c222.s, k = 5, cl = labels)
library(gmodels)
head(p)
length(p)
p <- knn(mc.s, c222.s, k = 90, cl = labels)
p <- knn(mc.s, c222.s, k = 10, cl = labels)
p <- knn(mc.s, c222.s, k = 20, cl = labels)
p <- knn(mc.s, c222.s, k = 27, cl = labels)
p <- knn(mc.s, c222.s, k = 50, cl = labels)
p <- knn(mc.s, c222.s, k = 80, cl = labels)
p <- knn(mc.s, c222.s, k = 21, cl = labels)
c222.s$pred_cluster <- p
head(c222.s)
table(p)
View(user_coup)
head(mas_coup2)
head(mas_coup)
mas_coup$cluster <- mas_coup2$cluster
head(mas_coup)
str(mas_coup)
cc <- mas_coup[, c(1, 141)]
head(cc)
cc <- as.data.frame(mas_coup)[, c(1, 141)]
head(cc)
head(cc, 20)
uc <- merge(user_coup, cc, by="COUPON_ID_hash", all.x=T)
head(DT1c)
DT1c$index <- DT1c$V1
head(DT1c)
DT1c$V1 <- NULL
head(DT1c)
user_coup <- DT1c[!duplicated(DT1c$USER_ID_hash),] #UNIQUE USER ID
uc <- merge(user_coup, cc, by="COUPON_ID_hash", all.x=T)
head(uc)
head(c222.s)
table(p)
str(c222.s)
View(c222)
View(c221)
c221$pred_cluster <- p
table(c221$pred)
table(c221$pred_cluster)
str(c221)
pc <- as.data.frame(c222.s)[, c(1, 115)]
pc <- as.data.frame(c221)[, c(1, 115)]
head(pc)
pc <- pc[order(pc$pred_cluster),]
head(pc)
head(c221)
pc <- as.data.frame(c221)[, c(1, 5, 115)]
pc <- pc[order(pc$pred_cluster),]
head(pc)
head(pc, 30)
head(uc)
uc1 <- as.data.frame(uc)[, c(3, 7, 157)]
head(uc1)
uc1 <- as.data.frame(uc)[, c(3, 7, 158)]
head(uc1)
head(pc)
pc$cluster <- pc$pred_cluster
head(pc)
puc <- merge(uc1, pc, by="cluster", all=T)
22748*310
head(puc)
head(puc, 20)
head(puc, 10)
head(uc1)
puc <- puc[order(puc$USER_ID_hash), ]
head(puc, 20)
head(puc)
puc$diff <- abs(puc$avg_price_rate - puc$PRICE_RATE)*100
head(puc)
puc$diff <- abs(puc$avg_price_rate - puc$PRICE_RATE)/100
head(puc)
puc <- puc[order(puc$USER_ID_hash, puc$diff), ]
head(puc)
head(puc, 20)
puc1 <- puc[!duplicated(puc$USER_ID_hash), ]
head(puc1)
puc2 <- as.data.frame(puc1)[, c(2, 4)]
head(puc)
head(puc2)
write.csv(puc2, file="puc2.csv")
q()
